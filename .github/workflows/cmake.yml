name: CMake

on:
  push:
    branches: [ "TestCoverage" ]
  pull_request:
    branches: [ "TestCoverage" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Coverage
  BUILD_EXAMPLES: true
  BUILD_GMOCK: true
  BUILD_IMPORT_EXPORT: true
  BUILD_TESTING: true
  BUILD_TESTS: true

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_BUILD_EXAMPLES=${{env.BUILD_EXAMPLES}} -DCMAKE_BUILD_GMOCK=${{env.BUILD_GMOCK}} -DCMAKE_BUILD_IMPORT_EXPORT=${{env.BUILD_IMPORT_EXPORT}} -DBUILD_TESTING=${{env.BUILD_TESTING}} -DBUILD_TESTS=${{env.BUILD_TESTS}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: WhiteBoxTests
      working-directory: ${{github.workspace}}/build/Tests/WhiteBoxTests
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: BlackBoxTests
      working-directory: ${{github.workspace}}/build/Tests/BlackBoxTests
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: InstallCoverageReportDependencies
      run: sudo apt-get -y install lcov

    - name: TestCoverageData
      working-directory: ${{github.workspace}}/build/
      run: geninfo ./PTN_Engine -b ../ -o coverage.info

    - name: TestCoverageReport
      working-directory: ${{github.workspace}}/build/
      run: genhtml coverage.info -o CoverageReport
